// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"HeliumLogger::HeliumLoggerPackageTests::ProductTarget" /* HeliumLoggerPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_65 /* Build configuration list for PBXAggregateTarget "HeliumLoggerPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_68 /* PBXTargetDependency */,
			);
			name = HeliumLoggerPackageTests;
			productName = HeliumLoggerPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		BEC4BBDC242387680044AA94 /* Logging.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BEC4BBDA242387680044AA94 /* Logging.framework */; };
		BEC4BBDD242387680044AA94 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BEC4BBDB242387680044AA94 /* LoggerAPI.framework */; };
		OBJ_48 /* HeliumLogHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* HeliumLogHandler.swift */; };
		OBJ_49 /* HeliumLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* HeliumLogger.swift */; };
		OBJ_50 /* HeliumStreamLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* HeliumStreamLogger.swift */; };
		OBJ_63 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_74 /* TestLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* TestLogger.swift */; };
		OBJ_75 /* TestStreamLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* TestStreamLogger.swift */; };
		OBJ_76 /* TestSwiftLog.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* TestSwiftLog.swift */; };
		OBJ_77 /* VerifyLinuxTestCount.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* VerifyLinuxTestCount.swift */; };
		OBJ_79 /* HeliumLogger.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		BEC4BBD5242387370044AA94 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "HeliumLogger::HeliumLogger";
			remoteInfo = HeliumLogger;
		};
		BEC4BBD8242387380044AA94 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "HeliumLogger::HeliumLoggerTests";
			remoteInfo = HeliumLoggerTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		BEC4BBDA242387680044AA94 /* Logging.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Logging.framework; path = Carthage/Build/Mac/Logging.framework; sourceTree = "<group>"; };
		BEC4BBDB242387680044AA94 /* LoggerAPI.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = LoggerAPI.framework; path = Carthage/Build/Mac/LoggerAPI.framework; sourceTree = "<group>"; };
		"HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = HeliumLogger.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"HeliumLogger::HeliumLoggerTests::Product" /* HeliumLoggerTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = HeliumLoggerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* HeliumLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeliumLogger.swift; sourceTree = "<group>"; };
		OBJ_11 /* HeliumStreamLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeliumStreamLogger.swift; sourceTree = "<group>"; };
		OBJ_14 /* TestLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestLogger.swift; sourceTree = "<group>"; };
		OBJ_15 /* TestStreamLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestStreamLogger.swift; sourceTree = "<group>"; };
		OBJ_16 /* TestSwiftLog.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestSwiftLog.swift; sourceTree = "<group>"; };
		OBJ_17 /* VerifyLinuxTestCount.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VerifyLinuxTestCount.swift; sourceTree = "<group>"; };
		OBJ_21 /* Logger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Logger.swift; sourceTree = "<group>"; };
		OBJ_22 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = /Users/ken/Projects/atmosphere/AMP/HeliumLogger/.build/checkouts/LoggerAPI/Package.swift; sourceTree = "<group>"; };
		OBJ_25 /* Locks.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Locks.swift; sourceTree = "<group>"; };
		OBJ_26 /* LogHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LogHandler.swift; sourceTree = "<group>"; };
		OBJ_27 /* Logging.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Logging.swift; sourceTree = "<group>"; };
		OBJ_28 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/ken/Projects/atmosphere/AMP/HeliumLogger/.build/checkouts/swift-log/Package.swift"; sourceTree = "<group>"; };
		OBJ_34 /* Carthage */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Carthage; sourceTree = SOURCE_ROOT; };
		OBJ_35 /* docs */ = {isa = PBXFileReference; lastKnownFileType = folder; path = docs; sourceTree = SOURCE_ROOT; };
		OBJ_36 /* Build */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Build; sourceTree = SOURCE_ROOT; };
		OBJ_37 /* Cartfile.resolved */ = {isa = PBXFileReference; lastKnownFileType = text; path = Cartfile.resolved; sourceTree = "<group>"; };
		OBJ_38 /* Cartfile */ = {isa = PBXFileReference; lastKnownFileType = text; path = Cartfile; sourceTree = "<group>"; };
		OBJ_39 /* PULL_REQUEST_TEMPLATE.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = PULL_REQUEST_TEMPLATE.md; sourceTree = "<group>"; };
		OBJ_40 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_41 /* CONTRIBUTING.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = CONTRIBUTING.md; sourceTree = "<group>"; };
		OBJ_42 /* LICENSE.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = LICENSE.txt; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* HeliumLogHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeliumLogHandler.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_51 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				BEC4BBDC242387680044AA94 /* Logging.framework in Frameworks */,
				BEC4BBDD242387680044AA94 /* LoggerAPI.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_78 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_79 /* HeliumLogger.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		BEC4BBD9242387680044AA94 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				BEC4BBDB242387680044AA94 /* LoggerAPI.framework */,
				BEC4BBDA242387680044AA94 /* Logging.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		OBJ_12 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_13 /* HeliumLoggerTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_13 /* HeliumLoggerTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* TestLogger.swift */,
				OBJ_15 /* TestStreamLogger.swift */,
				OBJ_16 /* TestSwiftLog.swift */,
				OBJ_17 /* VerifyLinuxTestCount.swift */,
			);
			name = HeliumLoggerTests;
			path = Tests/HeliumLoggerTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_18 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* LoggerAPI 1.9.0 */,
				OBJ_23 /* swift-log */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_19 /* LoggerAPI 1.9.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* LoggerAPI */,
				OBJ_22 /* Package.swift */,
			);
			name = "LoggerAPI 1.9.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_20 /* LoggerAPI */ = {
			isa = PBXGroup;
			children = (
				OBJ_21 /* Logger.swift */,
			);
			name = LoggerAPI;
			path = .build/checkouts/LoggerAPI/Sources/LoggerAPI;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_23 /* swift-log */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* Logging */,
				OBJ_28 /* Package.swift */,
			);
			name = "swift-log";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_24 /* Logging */ = {
			isa = PBXGroup;
			children = (
				OBJ_25 /* Locks.swift */,
				OBJ_26 /* LogHandler.swift */,
				OBJ_27 /* Logging.swift */,
			);
			name = Logging;
			path = ".build/checkouts/swift-log/Sources/Logging";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_29 /* Products */ = {
			isa = PBXGroup;
			children = (
				"HeliumLogger::HeliumLoggerTests::Product" /* HeliumLoggerTests.xctest */,
				"HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_12 /* Tests */,
				OBJ_18 /* Dependencies */,
				OBJ_29 /* Products */,
				OBJ_34 /* Carthage */,
				OBJ_35 /* docs */,
				OBJ_36 /* Build */,
				OBJ_37 /* Cartfile.resolved */,
				OBJ_38 /* Cartfile */,
				OBJ_39 /* PULL_REQUEST_TEMPLATE.md */,
				OBJ_40 /* README.md */,
				OBJ_41 /* CONTRIBUTING.md */,
				OBJ_42 /* LICENSE.txt */,
				BEC4BBD9242387680044AA94 /* Frameworks */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* HeliumLogger */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* HeliumLogger */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* HeliumLogHandler.swift */,
				OBJ_10 /* HeliumLogger.swift */,
				OBJ_11 /* HeliumStreamLogger.swift */,
			);
			name = HeliumLogger;
			path = Sources/HeliumLogger;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"HeliumLogger::HeliumLogger" /* HeliumLogger */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_44 /* Build configuration list for PBXNativeTarget "HeliumLogger" */;
			buildPhases = (
				OBJ_47 /* Sources */,
				OBJ_51 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = HeliumLogger;
			productName = HeliumLogger;
			productReference = "HeliumLogger::HeliumLogger::Product" /* HeliumLogger.framework */;
			productType = "com.apple.product-type.framework";
		};
		"HeliumLogger::HeliumLoggerTests" /* HeliumLoggerTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_70 /* Build configuration list for PBXNativeTarget "HeliumLoggerTests" */;
			buildPhases = (
				OBJ_73 /* Sources */,
				OBJ_78 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_82 /* PBXTargetDependency */,
			);
			name = HeliumLoggerTests;
			productName = HeliumLoggerTests;
			productReference = "HeliumLogger::HeliumLoggerTests::Product" /* HeliumLoggerTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"HeliumLogger::SwiftPMPackageDescription" /* HeliumLoggerPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_59 /* Build configuration list for PBXNativeTarget "HeliumLoggerPackageDescription" */;
			buildPhases = (
				OBJ_62 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = HeliumLoggerPackageDescription;
			productName = HeliumLoggerPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "HeliumLogger" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_29 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"HeliumLogger::HeliumLogger" /* HeliumLogger */,
				"HeliumLogger::SwiftPMPackageDescription" /* HeliumLoggerPackageDescription */,
				"HeliumLogger::HeliumLoggerPackageTests::ProductTarget" /* HeliumLoggerPackageTests */,
				"HeliumLogger::HeliumLoggerTests" /* HeliumLoggerTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_47 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_48 /* HeliumLogHandler.swift in Sources */,
				OBJ_49 /* HeliumLogger.swift in Sources */,
				OBJ_50 /* HeliumStreamLogger.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_62 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_63 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_73 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_74 /* TestLogger.swift in Sources */,
				OBJ_75 /* TestStreamLogger.swift in Sources */,
				OBJ_76 /* TestSwiftLog.swift in Sources */,
				OBJ_77 /* VerifyLinuxTestCount.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_68 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "HeliumLogger::HeliumLoggerTests" /* HeliumLoggerTests */;
			targetProxy = BEC4BBD8242387380044AA94 /* PBXContainerItemProxy */;
		};
		OBJ_82 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "HeliumLogger::HeliumLogger" /* HeliumLogger */;
			targetProxy = BEC4BBD5242387370044AA94 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_45 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
					"$(PROJECT_DIR)/Carthage/Build/Mac",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = HeliumLogger.xcodeproj/HeliumLogger_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = HeliumLogger;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = HeliumLogger;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_46 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
					"$(PROJECT_DIR)/Carthage/Build/Mac",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = HeliumLogger.xcodeproj/HeliumLogger_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = HeliumLogger;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = HeliumLogger;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_60 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_61 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_66 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_67 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_71 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = HeliumLogger.xcodeproj/HeliumLoggerTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = HeliumLoggerTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_72 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = HeliumLogger.xcodeproj/HeliumLoggerTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = HeliumLoggerTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "HeliumLogger" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_44 /* Build configuration list for PBXNativeTarget "HeliumLogger" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_45 /* Debug */,
				OBJ_46 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_59 /* Build configuration list for PBXNativeTarget "HeliumLoggerPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_60 /* Debug */,
				OBJ_61 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_65 /* Build configuration list for PBXAggregateTarget "HeliumLoggerPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_66 /* Debug */,
				OBJ_67 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_70 /* Build configuration list for PBXNativeTarget "HeliumLoggerTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_71 /* Debug */,
				OBJ_72 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
